// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  password String
  email String @unique
  role Role @default(USER)
  profile_picture String?
  cart Cart[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())
  name String
  image String
  description String?
  hot Boolean @default(false)
  price Int?
  carts Cart[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Category {
  id Int @id @default(autoincrement())
  name String
  description String
  image String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Cart {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int @default(1)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@unique([userId, productId])
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  totalPrice Float
  paymentId   String?
  status OrderStatus @default(PENDING)
  orderItems Json
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}